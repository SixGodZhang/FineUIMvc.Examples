@{
    ViewBag.Title = "Toolbar/ToolbarImages";
    var F = Html.F();
}


@section body {

    @(F.Panel().IsFluid(true).CssClass("blockpanel").IFrameName("main").EnableIFrame(true).Height(250).Title("面板").ID("Panel1")
        .Toolbars(
            F.Toolbar().Position(ToolbarPosition.Top)
                .Items(
                    F.Image().Icon(Icon.ArrowRight).CssClass("toobar-img").ID("Image1"),
                    F.LinkButton().OnClientClick("alert('Button1');").Text("按钮一").ID("Button1"),
                    F.Image().Icon(Icon.World).CssClass("toobar-img").ID("Image2"),
                    F.LinkButton().OnClientClick("alert('Button2');").Text("按钮二").ID("Button2"),
                    F.Image().Icon(Icon.Cake).CssClass("toobar-img").ID("Image3"),
                    F.LinkButton().OnClientClick("alert('Button3');").Text("按钮三").ID("Button3")
                )
        )
    )
    <br>
    <br>
    注：
    <ul>
        <li>由于页面布局时图片尚未加载，所以会造成布局错乱</li>
        <li>需要自己通过脚本在所有图片加载完毕后，重新对面板进行布局</li>
    </ul>

}


@section script {

    <script>

        // 布局时图片尚未加载，所以需要在图片完成加载后重新布局
        F.ready(function () {

            // 返回 Deferred 对象数组
            var imagdefs = $('.toobar-img img').map(function () {
                var imgEl = $(this);
                return $.Deferred(function (def) {
                    imgEl.load(function () {
                        //console.log('load img:' + imgEl.attr('src'));
                        def.resolve();
                    });
                }).promise();
            });

            // 等工具栏上的全部图片加载完毕后，再重新布局
            $.when.apply($, $.makeArray(imagdefs)).done(function () {
                F.ui.Panel1.doLayout();
                //console.log('OK');
            });

        });

    </script>

}

