@{
    ViewBag.Title = "GridTree/CellEditorDelete";
    var F = Html.F();
}


@section body {

    @(F.Grid().IsFluid(true).CssClass("blockpanel").ID("Grid1").ShowBorder(true).ShowHeader(true).Title("树表格").DataIDField("Id").DataTextField("Name").EnableTree(true).TreeColumn("Name").DataIDField("Id").DataParentIDField("ParentId").AllowCellEditing(true).ClicksToEdit(1)
        .Columns(
            F.RowNumberField(),
            F.RenderField().ColumnID("Name").ExpandUnusedSpace(true).DataField("Name").HeaderText("名称")
                .Editor(
                    F.TextBox().ID("tbxName").Required(true)
                ),
            F.RenderField().Width(100).ColumnID("Type").DataField("Type").HeaderText("类型").RendererFunction("renderType")
                .Editor(
                    F.DropDownList().ID("ddlType").Required(true)
                        .Items(
                            F.ListItem().Text("文件夹").Value("文件夹"),
                            F.ListItem().Text("CS文件").Value("CS文件"),
                            F.ListItem().Text("CONFIG文件").Value("CONFIG文件"),
                            F.ListItem().Text("ASPX文件").Value("ASPX文件"),
                            F.ListItem().Text("CSS文件").Value("CSS文件"),
                            F.ListItem().Text("PNG文件").Value("PNG文件"),
                            F.ListItem().Text("ICO文件").Value("ICO文件"),
                            F.ListItem().Text("GIF文件").Value("GIF文件"),
                            F.ListItem().Text("XML文件").Value("XML文件"),
                            F.ListItem().Text("ASHX文件").Value("ASHX文件")
                        )
                ),
            F.RenderField().Width(100).ColumnID("Size").DataField("Size").HeaderText("大小").FieldType(FieldType.Int)
                .Editor(
                    F.NumberBox().ID("tbxSize").NoDecimal(true).NoNegative(true).MinValue(0)
                ),
            F.RenderField().Width(150).ColumnID("ModifyDate").DataField("ModifyDate").HeaderText("修改日期").FieldType(FieldType.Date).Renderer(Renderer.Date).RendererArgument("yyyy-MM-dd")
                .Editor(
                    F.DatePicker().ID("DatePicker1").Required(true)
                ),
            F.RenderField().Width(80).EnableHeaderMenu(false).RendererFunction("renderActions")
        )
        .Toolbars(
            F.Toolbar().ID("Toolbar1")
                .Items(
                    F.Button().ID("btnDelete").Text("删除选中行").Icon(Icon.Delete).Listener("click", "onDeleteClick"),
                    F.ToolbarFill(),
                    F.Button().ID("btnReset").Text("重置表格数据").Listener("click", "onResetClick")
                )
        ).DataSource(ViewBag.Grid1DataSource).RowDataBoundFunction("onGrid1RowDataBound")

    )
    <br>

    @(F.Button().ID("btnSubmit").Text("保存数据").OnClick(Url.Action("btnSubmit_Click"), "Grid1"))

    <br>
    @(F.Label().ID("labResult"))

    <br />
    <br />

}


@section script {

    <script src="~/res/js/grid.js"></script>

    <script>

        function onGrid1RowDataBound(rowData) {
            var rowId = rowData.id;

            // 默认展开的节点
            if (rowId === '50' || rowId === '60') {
                rowData.expanded = true;
            }
        }


        function renderType(value) {
            return F.ui.ddlType.getTextByValue(value);
        }


        function onResetClick(event) {
            F.confirm({
                message: '确定要重置表格数据？',
                ok: function () {
                    F.ui.Grid1.rejectChanges();
                }
            });
        }

        function onDeleteClick(event) {
            var grid1 = F.ui.Grid1;
            if (!grid1.hasSelection()) {
                F.alert('没有选中项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function () {
                    grid1.deleteRows(selectedRows);
                }
            });
        }


        function renderActions(value, params) {
            var deleteImageUrl = '@Url.Content("~/res/icon/delete.png")';
            return '<a class="action-btn delete" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
        }

        F.ready(function () {

            var grid1 = F.ui.Grid1; if (!grid1) return;
            grid1.el.on('click', 'a.action-btn.delete', function (event) {
                var cnode = $(this);
                var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

                F.confirm({
                    message: '删除选中行？',
                    target: '_top',
                    ok: function () {
                        grid1.deleteRow(rowData);
                    }
                });
            });

        });

    </script>
}