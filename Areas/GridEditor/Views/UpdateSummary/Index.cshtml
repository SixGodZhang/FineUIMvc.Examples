@{
    ViewBag.Title = "GridEditor/UpdateSummary";
    var F = Html.F();
}


@section head {

    <style>
        .f-grid-row-summary .f-grid-cell-inner {
            font-weight: bold;
            color: red;
        }
    </style>

}

@section body {

    @(F.Grid().IsFluid(true).CssClass("blockpanel").ID("Grid1").ShowBorder(true).ShowHeader(true).Title("表格（双击编辑）").DataIDField("Id").DataTextField("Name").AllowCellEditing(true).ClicksToEdit(2).EnableCheckBoxSelect(true).EnableSummary(true)
        .Columns(
            F.RowNumberField(),
            F.RenderField().Width(100).ColumnID("Name").DataField("Name").HeaderText("姓名")
                .Editor(
                    F.TextBox().ID("tbxName").Required(true)
                ),
            F.RenderField().Width(100).ColumnID("Gender").DataField("Gender").FieldType(FieldType.Int).RendererFunction("renderGender").HeaderText("性别")
                .Editor(
                    F.DropDownList().ID("ddlGender").Required(true)
                        .Items(
                            F.ListItem().Text("男").Value("1"),
                            F.ListItem().Text("女").Value("0")
                        )
                ),
            F.RenderField().ColumnID("Major").DataField("Major").ExpandUnusedSpace(true).HeaderText("所学专业")
                .Editor(
                    F.TextBox().ID("tbxMajor").Required(true)
                ),
            F.RenderField().Width(100).ColumnID("ChineseScore").DataField("ChineseScore").FieldType(FieldType.Int).HeaderText("语文成绩")
                .Editor(
                    F.NumberBox().ID("nbChineseScore").NoDecimal(true).NoNegative(true).Required(true)
                ),
            F.RenderField().Width(100).ColumnID("MathScore").DataField("MathScore").FieldType(FieldType.Int).HeaderText("数学成绩")
                .Editor(
                    F.NumberBox().ID("nbMathScore").NoDecimal(true).NoNegative(true).Required(true)
                ),
            F.RenderField().Width(80).EnableHeaderMenu(false).RendererFunction("renderActions")
        )
        .Toolbars(
            F.Toolbar().ID("Toolbar1")
                .Items(
                    F.Button().ID("btnNew").Text("新增数据").Icon(Icon.Add).Listener("click", "onNewClick"),
                    F.Button().ID("btnDelete").Text("删除选中行").Icon(Icon.Delete).Listener("click", "onDeleteClick"),
                    F.ToolbarFill(),
                    F.Button().ID("btnReset").Text("重置表格数据").Listener("click", "onResetClick")
                )
        ).Listener("afteredit", "onGrid1AfterEdit").Listener("dataload", "onGrid1DataLoad").DataSource(ViewBag.Grid1DataSource)
    )
    <br>

    @(F.Button().ID("btnSubmit").Text("保存数据").OnClick(Url.Action("btnSubmit_Click"), "Grid1"))

    <br>
    @(F.Label().ID("labResult"))

    <br />
    注：编辑[语文成绩]或者[数学成绩]时会更新合计行数据。

}

@section script {

    <script src="~/res/js/grid.js"></script>

    <script>

        function updateSummary() {
            var grid1 = F.ui.Grid1, chineseTotal = 0, mathTotal = 0, allTotal = 0;
            grid1.getRowEls().each(function (index, tr) {
                chineseTotal += grid1.getCellValue(tr, 'ChineseScore');
                mathTotal += grid1.getCellValue(tr, 'MathScore');
            });

            // 第三个参数 true，强制更新，不显示左上角的更改标识
            grid1.updateSummaryCellValue('ChineseScore', chineseTotal, true);
            grid1.updateSummaryCellValue('MathScore', mathTotal, true);
        }

        // 表格数据加载后，重现计算合计行（这样就不必要在删除行时更新合计行）
        function onGrid1DataLoad() {
            updateSummary();
        }

        function onGrid1AfterEdit(event, value, params) {
            updateSummary();
        }


        function onNewClick(event) {
            var grid1 = F.ui.Grid1;

            // 新增一行（返回新增行的ID）
            var addedRowId = grid1.addNewRecord({
                'Name': '新用户',
                'Gender': '1',
                'Major': '化学系',
                'ChineseScore': 0,
                'MathScore': 0
            }, true);

        }

        function onResetClick(event) {
            F.confirm({
                message: '确定要重置表格数据？',
                ok: function () {
                    F.ui.Grid1.rejectChanges();
                }
            });
        }

        function onDeleteClick(event) {
            var grid1 = F.ui.Grid1;
            if (!grid1.hasSelection()) {
                F.alert('没有选中项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function () {
                    grid1.deleteRows(selectedRows);
                }
            });
        }


        function renderActions(value, params) {
            var deleteImageUrl = '@Url.Content("~/res/icon/delete.png")';
            return '<a class="action-btn delete" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
        }

        F.ready(function () {

            var grid1 = F.ui.Grid1;
            grid1.el.on('click', 'a.action-btn.delete', function (event) {
                var cnode = $(this);
                var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

                F.confirm({
                    message: '删除选中行？',
                    target: '_top',
                    ok: function () {
                        grid1.deleteRow(rowData);
                    }
                });
            });

        });

    </script>
}