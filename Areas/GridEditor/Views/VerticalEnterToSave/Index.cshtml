@{
    ViewBag.Title = "GridEditor/VerticalEnterToSave";
    var F = Html.F();
}


@section body {

    @(F.Grid().IsFluid(true).CssClass("blockpanel").ID("Grid1").ShowBorder(true).ShowHeader(true).Title("表格（单击编辑）").DataIDField("Id").DataTextField("Name").AllowCellEditing(true).ClicksToEdit(1).TabVerticalNavigate(false).EnterSameAsTab(true)
        .Columns(
            F.RowNumberField(),
            F.RenderField().Width(100).ColumnID("Name").DataField("Name").HeaderText("姓名")
                .Editor(
                    F.TextBox().ID("tbxName").Required(true)
                ),
            F.RenderField().Width(100).ColumnID("Gender").DataField("Gender").FieldType(FieldType.Int).RendererFunction("renderGender").HeaderText("性别")
                .Editor(
                    F.DropDownList().ID("ddlGender").Required(true)
                        .Items(
                            F.ListItem().Text("男").Value("1"),
                            F.ListItem().Text("女").Value("0")
                        )
                ),
            F.RenderField().Width(100).ColumnID("EntranceYear").DataField("EntranceYear").FieldType(FieldType.Int).HeaderText("入学年份")
                .Editor(
                    F.NumberBox().ID("nbxEntranceYear").NoDecimal(true).NoNegative(true).MinValue(2000).MaxValue(2025)
                ),
            F.RenderField().Width(120).ColumnID("EntranceDate").DataField("EntranceDate").FieldType(FieldType.Date).Renderer(Renderer.Date).RendererArgument("yyyy-MM-dd").HeaderText("入学日期")
                .Editor(
                    F.DatePicker().ID("dpEntranceDate").Required(true)
                ),
            F.RenderCheckField().Width(100).ColumnID("AtSchool").DataField("AtSchool").HeaderText("是否在校"),
            F.RenderField().ColumnID("Major").DataField("Major").ExpandUnusedSpace(true).HeaderText("所学专业")
                .Editor(
                    F.TextBox().ID("tbxMajor").Required(true)
                )
        )
        .DataSource(DataSourceUtil.GetDataTable()).Listener("beforetabedit", "onGridBeforeTabEdit")
    )
    <br>

    @(F.Button().ID("btnSubmit").Text("保存数据").OnClick(Url.Action("btnSubmit_Click"), "Grid1"))

    <br>
    @(F.Label().ID("labResult"))

    <br>
    快捷键说明：
    <ul>
        <li>方向键在单元格之间导航（非编辑状态）</li>
        <li>ESC 键取消单元格的编辑状态</li>
        <li>Enter、Tab 键进入垂直方向的下一个单元格（如果单元格可编辑，则使其进入编辑状态）</li>
        <li>Shift+Enter、Shift+Tab 键回退到垂直方向的上一个单元格（如果单元格可编辑，则使其进入编辑状态）</li>
        <li>在最后一个单元格按下 Enter 或者 ESC 键，会触发[保存数据]按钮的点击事件</li>
    </ul>

}

@section script {

    <script src="~/res/js/grid.js"></script>

    <script>

        function onGridBeforeTabEdit(event, params) {
            // 如果当前列是[所学专业]列，并且 TAB键 要跳转到的单元格为空（也就是当前位于表格的最后一个单元格）
            if (params.columnId === 'Major' && !params.nextTd) {
                // 点击保存按钮
                F.ui.btnSubmit.click();

                // 阻止 TAB键 跳转
                return false;
            }
        }

    </script>
}

