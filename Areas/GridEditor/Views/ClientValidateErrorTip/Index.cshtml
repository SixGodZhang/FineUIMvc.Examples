@{
    ViewBag.Title = "GridEditor/ClientValidateErrorTip";
    var F = Html.F();
}


@section head {

    <style>
        .grid-cell-errortip {
            background-image: url(@Url.Content("~/res/images/errortip.gif"));
            background-repeat: repeat-x;
            background-position: bottom;
        }
    </style>

}

@section body {

    @(F.Grid().IsFluid(true).CssClass("blockpanel").ID("Grid1").ShowBorder(true).ShowHeader(true).Title("表格（双击编辑）").DataIDField("Id").DataTextField("Name").AllowCellEditing(true).ClicksToEdit(2).EnableCheckBoxSelect(true)
        .Columns(
            F.RowNumberField(),
            F.RenderField().Width(100).ColumnID("Name").DataField("Name").HeaderText("姓名")
                .Editor(
                    F.TextBox().ID("tbxName")
            //.Required(true) 为了演示，本示例会在保存时自定义验证
                ),
            F.RenderField().Width(100).ColumnID("Gender").DataField("Gender").FieldType(FieldType.Int).RendererFunction("renderGender").HeaderText("性别")
                .Editor(
                    F.DropDownList().ID("ddlGender").Required(true)
                        .Items(
                            F.ListItem().Text("男").Value("1"),
                            F.ListItem().Text("女").Value("0")
                        )
                ),
            F.RenderField().Width(100).ColumnID("EntranceYear").DataField("EntranceYear").FieldType(FieldType.Int).HeaderText("入学年份")
                .Editor(
                    F.NumberBox().ID("nbxEntranceYear").NoDecimal(true).NoNegative(true).MinValue(2000).MaxValue(2025)
                ),
            F.RenderField().Width(120).ColumnID("EntranceDate").DataField("EntranceDate").FieldType(FieldType.Date).Renderer(Renderer.Date).RendererArgument("yyyy-MM-dd").HeaderText("入学日期")
                .Editor(
                    F.DatePicker().ID("dpEntranceDate").Required(true)
                ),
            F.RenderCheckField().Width(100).ColumnID("AtSchool").DataField("AtSchool").HeaderText("是否在校"),
            F.RenderField().ColumnID("Major").DataField("Major").ExpandUnusedSpace(true).HeaderText("所学专业")
                .Editor(
                    F.TextBox().ID("tbxMajor").Required(true)
                ),
            F.RenderField().Width(80).EnableHeaderMenu(false).RendererFunction("renderActions")
        )
        .Toolbars(
            F.Toolbar().ID("Toolbar1")
                .Items(
                    F.Button().ID("btnNew").Text("新增数据").Icon(Icon.Add).Listener("click", "onNewClick"),
                    F.Button().ID("btnDelete").Text("删除选中行").Icon(Icon.Delete).Listener("click", "onDeleteClick"),
                    F.ToolbarFill(),
                    F.Button().ID("btnReset").Text("重置表格数据").Listener("click", "onResetClick")
                )
        ).Listener("afteredit", "onGrid1AfterEdit").DataSource(ViewBag.Grid1DataSource)
    )
    <br>

    @(F.Button().ID("btnSubmit").Text("保存数据").Listener("click", "onSubmitClick"))

    <br>
    @(F.Label().ID("labResult"))

    <br>
    注：保存数据前，验证“姓名”不能为空（现有数据可以简单通过 Required="true" 属性来控制，新增数据默认为空的话需要这个客户端验证）。

}

@section script {

    <script src="~/res/js/grid.js"></script>

    <script>

        function onGrid1AfterEdit(event, value, params) {
            if (params.columnId === 'Name') {
                var cellInnerEl = params.td.find('.f-grid-cell-inner');
                if (!value) {
                    cellInnerEl.addClass('grid-cell-errortip');
                } else {
                    cellInnerEl.removeClass('grid-cell-errortip');
                }
            }
        }

        function isValid() {
            var grid1 = F.ui.Grid1;
            var valid = true, modifiedData = grid1.getModifiedData();

            $.each(modifiedData, function (index, rowData) {

                // rowData.id: 行ID
                // rowData.status: 行状态（newadded, modified, deleted）
                // rowData.values: 行中修改单元格对象，比如 { "Name": "刘国2", "Gender": 0, "EntranceYear": 2003 }
                if (rowData.status === 'deleted') {
                    return true; // continue
                }

                var name = rowData.values['Name'];
                // 更改了姓名列，并且为空字符串
                if (typeof (name) != 'undefined' && $.trim(name) == '') {
                    F.alert({
                        message: '姓名不能为空！',
                        ok: function () {
                            grid1.startEdit(rowData.id, 'Name');
                        }
                    });

                    valid = false;

                    return false; // break
                }
            });


            return valid;
        }

        function onSubmitClick(event) {
            var grid1 = F.ui.Grid1;

            // 自定义验证是否通过
            if (!isValid()) {
                return;
            }

            // 触发后台事件
            F.doPostBack('@Url.Action("btnSubmit_Click")', {
                Grid1_fields: grid1.fields,
                Grid1_modifiedData: grid1.getModifiedData()
            });
        }

        function onNewClick(event) {
            var grid1 = F.ui.Grid1;

            // 新增一行（返回新增行的ID）
            var addedRowId = grid1.addNewRecord({
                'Name': '新用户',
                'Gender': '1',
                'EntranceYear': '2015',
                'EntranceDate': '2016-11-15',
                'AtSchool': false,
                'Major': '化学系'
            }, true);

        }

        function onResetClick(event) {
            F.confirm({
                message: '确定要重置表格数据？',
                ok: function () {
                    F.ui.Grid1.rejectChanges();
                }
            });
        }

        function onDeleteClick(event) {
            var grid1 = F.ui.Grid1;
            if (!grid1.hasSelection()) {
                F.alert('没有选中项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function () {
                    grid1.deleteRows(selectedRows);
                }
            });
        }


        function renderActions(value, params) {
            var deleteImageUrl = '@Url.Content("~/res/icon/delete.png")';
            return '<a class="action-btn delete" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
        }

        F.ready(function () {

            var grid1 = F.ui.Grid1;
            grid1.el.on('click', 'a.action-btn.delete', function (event) {
                var cnode = $(this);
                var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

                F.confirm({
                    message: '删除选中行？',
                    target: '_top',
                    ok: function () {
                        grid1.deleteRow(rowData);
                    }
                });
            });

        });

    </script>
}